{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAiBC,SAASC,cAAc,SACxCC,EAAeF,SAASC,cAAc,gBAC5CF,EAAeI,iBAAiB,UAOhC,SAAsBC,GACpBA,EAAEC,iBACFH,EAAaI,UAAW,EAExB,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWX,EAAeY,SAC/C,IAAIC,EAAeC,OAAOL,EAAMM,OAChC,MAAMC,EAAcF,OAAOJ,EAAKK,OAC1BE,EAAgBH,OAAOH,EAAOI,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAeC,IAClCC,EAAcD,EAAGL,GACdO,MAAK,EAACC,SAAEA,EAAQb,MAAEA,MACjBV,EAAAwB,OAAOC,QAAQ,uBAAqBF,QAAiBb,MAAU,IAEhEgB,OAAM,EAACH,SAAEA,EAAQb,MAAEA,MAClBV,EAAAwB,OAAOG,QAAQ,sBAAoBJ,QAAeb,MAAU,IAEhEK,GAAgBG,EAGlBU,YAAW,KACTvB,EAAaI,UAAW,CAAK,GAC5BM,EA3BiB,I,IA8BtB,SAASM,EAAcE,EAAUb,GAC/B,MAAMmB,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAET,E,MAAUb,GAElC,OAAO,IAAIuB,SAAQ,CAACC,EAASC,KAC3BP,YAAW,KACLC,EACFK,EAAQF,GAERG,EAAOH,EAAc,GAEtBtB,EAAM,G,CAxCbV,EAAAwB,OAAOY,KAAK,CACVC,QAFoB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst parametersForm = document.querySelector('.form');\nconst submitButton = document.querySelector('.form button');\nparametersForm.addEventListener('submit', onFormSubmit);\n\nconst notifyTimeout = 3000;\nNotify.init({\n  timeout: notifyTimeout,\n});\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  submitButton.disabled = true;\n\n  const { delay, step, amount } = parametersForm.elements;\n  let promiseDelay = Number(delay.value);\n  const promiseStep = Number(step.value);\n  const promiseAmount = Number(amount.value);\n\n  for (let i = 1; i <= promiseAmount; i++) {\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    promiseDelay += promiseStep;\n  }\n\n  setTimeout(() => {\n    submitButton.disabled = false;\n  }, promiseDelay + notifyTimeout);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseObject = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseObject);\n      } else {\n        reject(promiseObject);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$parametersForm","document","querySelector","$47d4ff9957288465$var$submitButton","addEventListener","e","preventDefault","disabled","delay","delay1","step","amount","elements","promiseDelay","Number","value","promiseStep","promiseAmount","i","$47d4ff9957288465$var$createPromise","then","position","Notify","success","catch","failure","setTimeout","shouldResolve","Math","random","promiseObject","Promise","resolve","reject","init","timeout"],"version":3,"file":"03-promises.2c438280.js.map"}